rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ⚠️ GELİŞTİRME ORTAMI İÇİN GEÇİCİ KURAL - ÜRETİMDE DEĞİŞTİRİLMELİ
    match /{document=**} {
      allow read, write: if true;
    }
    
    // Kullanıcı rolü kontrol fonksiyonu
    function isOwner() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner';
    }
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isResourceOwner(resource) {
      return request.auth.uid == resource.data.userId;
    }
    
    function isResourceOwnerOrCreator(resource) {
      return request.auth.uid == resource.data.userId || 
             request.auth.uid == resource.data.createdBy;
    }

    // Users collection - Kullanıcı profilleri
    match /users/{userId} {
      // Kayıt sırasında kendi hesabını oluşturabilir
      allow create: if request.auth.uid == userId;
      // Kendi hesabını okuyabilir ve güncelleyebilir
      allow read, update: if request.auth.uid == userId;
      // Owner tüm kullanıcıları görebilir ve yönetebilir
      allow read, create, update: if isAuthenticated() && isOwner();
      // Sadece owner başka kullanıcıları silebilir (kendi hesabını değil)
      allow delete: if isAuthenticated() && isOwner() && request.auth.uid != userId;
    }

    // Customers collection - Müşteriler
    match /customers/{customerId} {
      allow read, write: if isAuthenticated() && (
        isOwner() || isResourceOwnerOrCreator(resource)
      );
      allow create: if isAuthenticated();
    }

    // Appointments collection - Randevular
    match /appointments/{appointmentId} {
      allow read, write: if isAuthenticated() && (
        isOwner() || 
        request.auth.uid == resource.data.employeeId ||
        request.auth.uid == resource.data.createdBy
      );
      allow create: if isAuthenticated();
    }

    // Transactions collection - İşlemler
    match /transactions/{transactionId} {
      allow read, write: if isAuthenticated() && (
        isOwner() || isResourceOwnerOrCreator(resource)
      );
      allow create: if isAuthenticated();
    }

    // Expenses collection - Giderler
    match /expenses/{expenseId} {
      allow read, write: if isAuthenticated() && (
        isOwner() || isResourceOwnerOrCreator(resource)
      );
      allow create: if isAuthenticated();
    }

    // Notes collection - Notlar
    match /notes/{noteId} {
      allow read, write: if isAuthenticated() && (
        isOwner() || isResourceOwner(resource)
      );
      allow create: if isAuthenticated();
    }

    // Services collection - Hizmetler (eğer varsa)
    match /services/{serviceId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner();
    }

    // Settings collection - Ayarlar (sadece owner)
    match /settings/{settingId} {
      allow read, write: if isAuthenticated() && isOwner();
    }

    // Reports collection - Raporlar (sadece owner)
    match /reports/{reportId} {
      allow read, write: if isAuthenticated() && isOwner();
    }

    // Default deny rule
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 