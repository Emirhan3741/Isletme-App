import 'package:flutter/material.dart';

class ServiceModel {
  final String id;
  final String name;
  final BeautyServiceCategory category;
  final double price;
  final int durationMinutes;
  final String description;
  final bool isActive;
  final DateTime createdAt;
  final DateTime? updatedAt;
  final double commissionRate;
  final List<String> requiredMaterials;
  final List<String> compatibleSpecialties;
  final String? imageUrl;
  final bool isPopular;
  final int? preparationTimeMinutes;
  final String? afterCareInstructions;

  ServiceModel({
    required this.id,
    required this.name,
    required this.category,
    required this.price,
    required this.durationMinutes,
    this.description = '',
    this.isActive = true,
    required this.createdAt,
    this.updatedAt,
    this.commissionRate = 0.0,
    this.requiredMaterials = const [],
    this.compatibleSpecialties = const [],
    this.imageUrl,
    this.isPopular = false,
    this.preparationTimeMinutes,
    this.afterCareInstructions,
  });

  factory ServiceModel.fromMap(Map<String, dynamic> map) {
    return ServiceModel(
      id: map['id'] ?? '',
      name: map['name'] ?? '',
      category:
          BeautyServiceCategoryExtension.fromString(map['category'] ?? 'other'),
      price: (map['price'] ?? 0).toDouble(),
      durationMinutes: map['durationMinutes'] ?? 30,
      description: map['description'] ?? '',
      isActive: map['isActive'] ?? true,
      createdAt: map['createdAt']?.toDate() ?? DateTime.now(),
      updatedAt: map['updatedAt']?.toDate(),
      commissionRate: (map['commissionRate'] ?? 0.0).toDouble(),
      requiredMaterials: List<String>.from(map['requiredMaterials'] ?? []),
      compatibleSpecialties:
          List<String>.from(map['compatibleSpecialties'] ?? []),
      imageUrl: map['imageUrl'],
      isPopular: map['isPopular'] ?? false,
      preparationTimeMinutes: map['preparationTimeMinutes'],
      afterCareInstructions: map['afterCareInstructions'],
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'name': name,
      'category': category.name,
      'price': price,
      'durationMinutes': durationMinutes,
      'description': description,
      'isActive': isActive,
      'createdAt': createdAt,
      'updatedAt': updatedAt ?? DateTime.now(),
      'commissionRate': commissionRate,
      'requiredMaterials': requiredMaterials,
      'compatibleSpecialties': compatibleSpecialties,
      'imageUrl': imageUrl,
      'isPopular': isPopular,
      'preparationTimeMinutes': preparationTimeMinutes,
      'afterCareInstructions': afterCareInstructions,
    };
  }

  ServiceModel copyWith({
    String? name,
    BeautyServiceCategory? category,
    double? price,
    int? durationMinutes,
    String? description,
    bool? isActive,
    DateTime? updatedAt,
    double? commissionRate,
    List<String>? requiredMaterials,
    List<String>? compatibleSpecialties,
    String? imageUrl,
    bool? isPopular,
    int? preparationTimeMinutes,
    String? afterCareInstructions,
  }) {
    return ServiceModel(
      id: id,
      name: name ?? this.name,
      category: category ?? this.category,
      price: price ?? this.price,
      durationMinutes: durationMinutes ?? this.durationMinutes,
      description: description ?? this.description,
      isActive: isActive ?? this.isActive,
      createdAt: createdAt,
      updatedAt: updatedAt ?? DateTime.now(),
      commissionRate: commissionRate ?? this.commissionRate,
      requiredMaterials: requiredMaterials ?? this.requiredMaterials,
      compatibleSpecialties:
          compatibleSpecialties ?? this.compatibleSpecialties,
      imageUrl: imageUrl ?? this.imageUrl,
      isPopular: isPopular ?? this.isPopular,
      preparationTimeMinutes:
          preparationTimeMinutes ?? this.preparationTimeMinutes,
      afterCareInstructions:
          afterCareInstructions ?? this.afterCareInstructions,
    );
  }

  String get formattedPrice => '‚Ç∫${price.toStringAsFixed(0)}';
  String get formattedDuration => '${durationMinutes} dk';

  @override
  String toString() =>
      'ServiceModel(id: $id, name: $name, category: ${category.displayName})';
}

enum BeautyServiceCategory {
  // Genel Kategoriler
  hairCare('Sa√ß Bakƒ±mƒ±', 'üíá‚Äç‚ôÄÔ∏è', Icons.content_cut, Colors.brown,
      'Sa√ß bakƒ±m hizmetleri'),
  skinCare('Cilt Bakƒ±mƒ±', '‚ú®', Icons.face, Colors.lightGreen,
      'Cilt bakƒ±m hizmetleri'),
  nailCare('Tƒ±rnak Bakƒ±mƒ±', 'üíÖ', Icons.back_hand, Colors.pink,
      'Tƒ±rnak bakƒ±m hizmetleri'),
  massage('Masaj', 'üíÜ‚Äç‚ôÄÔ∏è', Icons.healing, Colors.green, 'Masaj hizmetleri'),
  waxing('Aƒüda', 'ü¶µ', Icons.clean_hands, Colors.teal, 'Aƒüda hizmetleri'),
  makeup('Makyaj', 'üíÑ', Icons.face, Colors.pink, 'Makyaj hizmetleri'),
  facialTreatments('Y√ºz Bakƒ±mƒ±', 'üòä', Icons.face_retouching_natural,
      Colors.green, 'Y√ºz bakƒ±m tedavileri'),
  bodyTreatments(
      'V√ºcut Bakƒ±mƒ±', 'üõÅ', Icons.spa, Colors.blue, 'V√ºcut bakƒ±m tedavileri'),
  specialTreatments(
      '√ñzel Tedaviler', '‚≠ê', Icons.star, Colors.amber, '√ñzel bakƒ±m tedavileri'),

  // Sa√ß Hizmetleri
  hairCut('Sa√ß Kesimi', 'üíá‚Äç‚ôÄÔ∏è', Icons.content_cut, Colors.brown,
      'Kadƒ±n ve erkek sa√ß kesimi hizmetleri'),
  hairWash('Sa√ß Yƒ±kama', 'üß¥', Icons.local_car_wash, Colors.blue,
      '≈ûampuan ve bakƒ±m √ºr√ºnleri ile sa√ß yƒ±kama'),
  hairDrying(
      'F√∂n', 'üí®', Icons.air, Colors.cyan, 'Profesyonel f√∂n √ßekme hizmeti'),
  hairColoring('Sa√ß Boyama', 'üé®', Icons.palette, Colors.purple,
      'Sa√ß renk deƒüi≈üimi ve boyama'),
  hairHighlights('R√∂fle/Balyaj', '‚ú®', Icons.auto_fix_high, Colors.amber,
      'Sa√ß renklendirme teknikleri'),
  hairTreatment('Sa√ß Bakƒ±mƒ±', 'üíÜ‚Äç‚ôÄÔ∏è', Icons.spa, Colors.green,
      'Keratin, botoks ve bakƒ±m maskeleri'),

  // Tƒ±rnak Hizmetleri
  manicure(
      'Manik√ºr', 'üíÖ', Icons.back_hand, Colors.pink, 'El ve tƒ±rnak bakƒ±mƒ±'),
  pedicure('Pedik√ºr', 'ü¶∂', Icons.spa, Colors.teal, 'Ayak ve tƒ±rnak bakƒ±mƒ±'),
  nailArt('Nail Art', 'üé®', Icons.brush, Colors.deepPurple,
      'Tƒ±rnak s√ºsleme ve sanat'),
  gelNails('Kalƒ±cƒ± Oje', 'üíé', Icons.diamond, Colors.red,
      'Kalƒ±cƒ± oje ve jel tƒ±rnak'),

  // Cilt Bakƒ±mƒ±
  facialCleaning('Cilt Temizliƒüi', '‚ú®', Icons.face, Colors.lightGreen,
      'Derin cilt temizliƒüi'),
  facialMask('Y√ºz Maskesi', 'üß¥', Icons.face_retouching_natural, Colors.green,
      'Besleyici ve nemlendirici maskeler'),
  antiAging('Anti-Aging', '‚è∞', Icons.refresh, Colors.orange,
      'Ya≈ülanma kar≈üƒ±tƒ± bakƒ±m'),
  acneTreatment('Akne Tedavisi', 'üî¨', Icons.healing, Colors.red,
      'Akne ve sivilce tedavisi'),

  // Makyaj
  dailyMakeup('G√ºnl√ºk Makyaj', 'üíÑ', Icons.face, Colors.pink,
      'G√ºnl√ºk kullanƒ±m makyajƒ±'),
  eventMakeup('√ñzel G√ºn Makyajƒ±', 'üë∞', Icons.celebration, Colors.amber,
      'D√ºƒü√ºn, ni≈üan ve √∂zel g√ºnler'),
  eyeMakeup('G√∂z Makyajƒ±', 'üëÅÔ∏è', Icons.visibility, Colors.indigo,
      'G√∂z √ßevresi makyajƒ±'),

  // Ka≈ü ve Kirpik
  eyebrowShaping('Ka≈ü ≈ûekillendirme', 'üëÅÔ∏è', Icons.visibility, Colors.brown,
      'Ka≈ü alma ve ≈üekillendirme'),
  eyebrowTinting(
      'Ka≈ü Boyama', 'üé®', Icons.brush, Colors.deepOrange, 'Ka≈ü renklendirme'),
  eyelashExtension('Kirpik Uzatma', 'üëÅÔ∏è', Icons.remove_red_eye, Colors.black,
      'Takma kirpik uygulamasƒ±'),
  eyelashLifting('Kirpik Lifting', '‚¨ÜÔ∏è', Icons.keyboard_arrow_up, Colors.grey,
      'Kirpik kaldƒ±rma ve kƒ±vƒ±rma'),

  // Aƒüda ve Epilasyon
  waxingLegs('Bacak Aƒüdasƒ±', 'ü¶µ', Icons.clean_hands, Colors.teal,
      'Bacak b√∂lgesi aƒüda'),
  waxingArms(
      'Kol Aƒüdasƒ±', 'üí™', Icons.clean_hands, Colors.blue, 'Kol b√∂lgesi aƒüda'),
  waxingFace('Y√ºz Aƒüdasƒ±', 'üòä', Icons.face, Colors.pink, 'Y√ºz b√∂lgesi aƒüda'),
  waxingBikini('Bikini Aƒüdasƒ±', 'üëô', Icons.clean_hands, Colors.purple,
      'Bikini b√∂lgesi aƒüda'),

  // Masaj
  relaxingMassage('Rahatlatƒ±cƒ± Masaj', 'üíÜ‚Äç‚ôÄÔ∏è', Icons.healing, Colors.green,
      'Stres giderici masaj'),
  aromatherapy('Aromaterapi', 'üå∏', Icons.local_florist, Colors.purple,
      'Aromaterapi masajƒ±'),
  hotStone('Sƒ±cak Ta≈ü Masajƒ±', 'üî•', Icons.spa, Colors.orange,
      'Sƒ±cak ta≈ü ile masaj'),

  // Diƒüer
  other('Diƒüer', 'üìã', Icons.more_horiz, Colors.grey, 'Diƒüer hizmetler');

  const BeautyServiceCategory(
    this.displayName,
    this.emoji,
    this.icon,
    this.color,
    this.description,
  );

  final String displayName;
  final String emoji;
  final IconData icon;
  final Color color;
  final String description;
}

extension BeautyServiceCategoryExtension on BeautyServiceCategory {
  static BeautyServiceCategory fromString(String value) {
    return BeautyServiceCategory.values.firstWhere(
      (category) => category.name == value,
      orElse: () => BeautyServiceCategory.other,
    );
  }
}

// √ñnceden tanƒ±mlƒ± pop√ºler hizmetler
class BeautyServiceTemplates {
  static List<ServiceModel> getDefaultServices() {
    final now = DateTime.now();
    return [
      // Sa√ß Hizmetleri
      ServiceModel(
        id: 'hair_cut_women',
        name: 'Kadƒ±n Sa√ß Kesimi',
        category: BeautyServiceCategory.hairCut,
        price: 150,
        durationMinutes: 45,
        description: 'Profesyonel kadƒ±n sa√ß kesimi ve ≈üekillendirme',
        createdAt: now,
        commissionRate: 0.3,
        requiredMaterials: ['Makas', 'Tarak', 'Sa√ß Spreyi'],
        compatibleSpecialties: ['hairstylist'],
        isPopular: true,
      ),
      ServiceModel(
        id: 'hair_coloring',
        name: 'Sa√ß Boyama',
        category: BeautyServiceCategory.hairColoring,
        price: 300,
        durationMinutes: 120,
        description: 'Sa√ß renk deƒüi≈üimi ve boyama i≈ülemi',
        createdAt: now,
        commissionRate: 0.25,
        requiredMaterials: ['Sa√ß Boyasƒ±', 'Oksidan', 'Eldiven', 'Fƒ±r√ßa'],
        compatibleSpecialties: ['colorist', 'hairstylist'],
        preparationTimeMinutes: 15,
        afterCareInstructions: 'ƒ∞lk 48 saat sa√ßƒ± yƒ±kamayƒ±n',
      ),
      ServiceModel(
        id: 'hair_drying',
        name: 'F√∂n',
        category: BeautyServiceCategory.hairDrying,
        price: 80,
        durationMinutes: 30,
        description: 'Profesyonel f√∂n √ßekme',
        createdAt: now,
        commissionRate: 0.4,
        requiredMaterials: ['F√∂n Makinesi', 'Fƒ±r√ßa', 'Sa√ß Spreyi'],
        compatibleSpecialties: ['hairstylist'],
        isPopular: true,
      ),

      // Tƒ±rnak Hizmetleri
      ServiceModel(
        id: 'manicure_classic',
        name: 'Klasik Manik√ºr',
        category: BeautyServiceCategory.manicure,
        price: 120,
        durationMinutes: 60,
        description: 'El bakƒ±mƒ± ve klasik manik√ºr',
        createdAt: now,
        commissionRate: 0.35,
        requiredMaterials: ['Tƒ±rnak Makasƒ±', 'T√∂rp√º', 'Oje', 'El Kremi'],
        compatibleSpecialties: ['nailTechnician'],
        isPopular: true,
      ),
      ServiceModel(
        id: 'gel_nails',
        name: 'Kalƒ±cƒ± Oje',
        category: BeautyServiceCategory.gelNails,
        price: 180,
        durationMinutes: 90,
        description: 'UV jel ile kalƒ±cƒ± oje uygulamasƒ±',
        createdAt: now,
        commissionRate: 0.3,
        requiredMaterials: ['Jel Oje', 'UV Lamba', 'Base Coat', 'Top Coat'],
        compatibleSpecialties: ['nailTechnician'],
        afterCareInstructions:
            '2-3 hafta dayanƒ±r, su ile temas ettikten sonra kurulayƒ±n',
      ),

      // Cilt Bakƒ±mƒ±
      ServiceModel(
        id: 'facial_cleaning',
        name: 'Cilt Temizliƒüi',
        category: BeautyServiceCategory.facialCleaning,
        price: 200,
        durationMinutes: 75,
        description: 'Derin cilt temizliƒüi ve bakƒ±m',
        createdAt: now,
        commissionRate: 0.25,
        requiredMaterials: ['Temizlik Kremi', 'Tonik', 'Maske', 'Nemlendirici'],
        compatibleSpecialties: ['esthetician'],
        preparationTimeMinutes: 10,
        afterCareInstructions: '24 saat g√ºne≈üe √ßƒ±kmayƒ±n, bol su i√ßin',
      ),

      // Ka≈ü Hizmetleri
      ServiceModel(
        id: 'eyebrow_shaping',
        name: 'Ka≈ü ≈ûekillendirme',
        category: BeautyServiceCategory.eyebrowShaping,
        price: 100,
        durationMinutes: 30,
        description: 'ƒ∞plik y√∂ntemi ile ka≈ü alma',
        createdAt: now,
        commissionRate: 0.4,
        requiredMaterials: ['ƒ∞plik', 'Ka≈ü Makasƒ±', 'Ka≈ü Fƒ±r√ßasƒ±'],
        compatibleSpecialties: ['eyebrowSpecialist', 'esthetician'],
        isPopular: true,
      ),
    ];
  }
}
